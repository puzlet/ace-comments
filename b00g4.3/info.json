{
  "id" : "b00g4.3",
  "moduleIdx" : 424,
  "baseId" : "b00g4.2",
  "name" : "$\\LaTeX$\/MathJax and hyperlinks in Ace editor code comments",
  "url" : "?id=b00g4.3",
  "valid" : true,
  "editor" : "lab_base",
  "editorIp" : "58.28.155.63",
  "timestamp" : "2014-05-16 12:07:28",
  "isoTime" : "2014-05-16T12:07:28+12:00",
  "canAccessFolder" : true,
  "isSandbox" : false,
  "canCommit" : true,
  "share" : "admin",
  "isPublic" : true,
  "price" : null,
  "uses" : "b007c.5",
  "imports" : [
    {
      "id" : "b007c.5",
      "moduleIdx" : 221,
      "baseId" : "b007c.4",
      "name" : "Module Languages",
      "url" : "?id=b007c.5",
      "valid" : true,
      "editor" : "martin",
      "editorIp" : "58.28.155.63",
      "timestamp" : "2013-08-22 20:20:34",
      "isoTime" : "2013-08-22T20:20:34+12:00",
      "canAccessFolder" : true,
      "isSandbox" : false,
      "canCommit" : true,
      "share" : "gary",
      "isPublic" : true,
      "price" : null,
      "depth" : 1,
      "fromUses" : false,
      "importer" : "b00g4.3"
    },
    {
      "id" : "b000n.5",
      "moduleIdx" : 20,
      "baseId" : "b000n.4",
      "name" : "HTML\/JavaScript definition",
      "url" : "?id=b000n.5",
      "valid" : true,
      "editor" : "martin",
      "editorIp" : "58.28.155.63",
      "timestamp" : "2012-08-19 12:17:24",
      "isoTime" : "2012-08-19T12:17:24+12:00",
      "canAccessFolder" : true,
      "isSandbox" : false,
      "canCommit" : true,
      "share" : null,
      "isPublic" : true,
      "price" : null,
      "depth" : 2,
      "fromUses" : false,
      "importer" : "b007c.5"
    },
    {
      "id" : "b006m.2",
      "moduleIdx" : 199,
      "baseId" : "b006m.1",
      "name" : "CoffeeScript definition",
      "url" : "?id=b006m.2",
      "valid" : true,
      "editor" : "martin",
      "editorIp" : "58.28.155.63",
      "timestamp" : "2012-12-10 13:59:29",
      "isoTime" : "2012-12-10T13:59:29+13:00",
      "canAccessFolder" : true,
      "isSandbox" : false,
      "canCommit" : true,
      "share" : null,
      "isPublic" : true,
      "price" : null,
      "depth" : 2,
      "fromUses" : false,
      "importer" : "b007c.5"
    },
    {
      "id" : "b000d.15",
      "moduleIdx" : 12,
      "baseId" : "b000d.14",
      "name" : "Python definition",
      "url" : "?id=b000d.15",
      "valid" : true,
      "editor" : "martin",
      "editorIp" : "58.28.155.63",
      "timestamp" : "2013-05-20 15:20:43",
      "isoTime" : "2013-05-20T15:20:43+12:00",
      "canAccessFolder" : true,
      "isSandbox" : false,
      "canCommit" : true,
      "share" : "gary",
      "isPublic" : true,
      "price" : null,
      "depth" : 2,
      "fromUses" : false,
      "importer" : "b007c.5"
    },
    {
      "id" : "b000g.10",
      "moduleIdx" : 14,
      "baseId" : "b000g.9",
      "name" : "Octave definition",
      "url" : "?id=b000g.10",
      "valid" : true,
      "editor" : "martin",
      "editorIp" : "58.28.155.63",
      "timestamp" : "2013-08-22 20:03:42",
      "isoTime" : "2013-08-22T20:03:42+12:00",
      "canAccessFolder" : true,
      "isSandbox" : false,
      "canCommit" : true,
      "share" : "gary",
      "isPublic" : true,
      "price" : null,
      "depth" : 2,
      "fromUses" : false,
      "importer" : "b007c.5"
    }
  ],
  "defs" : {
    "html" : {
      "src" : "b000n.5",
      "fileExt" : "html",
      "endToken" : "<!--puzlet_end-->",
      "endTokenExec" : "<!--puzlet_end-->",
      "passThru" : "true"
    },
    "javascript" : {
      "src" : "b000n.5",
      "fileExt" : "js",
      "endToken" : "\/\/!end",
      "endTokenExec" : "\/\/!end",
      "includeInHtmlHead" : "true"
    },
    "css" : {
      "src" : "b000n.5",
      "fileExt" : "css",
      "endToken" : "\/*!end*\/",
      "endTokenExec" : "\/*!end*\/",
      "includeInHtmlHead" : "true"
    },
    "coffee" : {
      "src" : "b006m.2",
      "fileExt" : "coffee",
      "endToken" : "#!end",
      "endTokenExec" : "#!end",
      "includeInHtmlHead" : "true"
    },
    "python" : {
      "src" : "b000d.15",
      "fileExt" : "py",
      "preamble" : "#!puzlet",
      "preambleExec" : "import puzlet",
      "postambleExec" : "puzlet.endScript()",
      "endToken" : "#!end",
      "endTokenExec" : "puzlet.end",
      "preProcessFileCommand" : "\nexport PYTHONPATH=..\/..\/..\/puzlet\/b000d.15; python ..\/..\/..\/puzlet\/b000d.15\/preprocessscript.py\n",
      "execFileCommand" : "\nexport PYTHONPATH=..\/..\/..\/puzlet\/b000d.15; python -W ignore::DeprecationWarning\n"
    },
    "octave" : {
      "src" : "b000g.10",
      "fileExt" : "m",
      "endToken" : "%!end",
      "endTokenExec" : "_end",
      "preProcessFileCommand" : "\nexport PYTHONPATH=..\/..\/..\/puzlet\/b000g.10; python ..\/..\/..\/puzlet\/b000g.10\/preprocessoctave.py\n",
      "execFileCommand" : "\noctave -H --no-line-editing -q\n"
    }
  },
  "exports" : null,
  "htmlResources" : "<script src='\/puzlet\/php\/source.php?pageId=b00g4.3&file=resources.js' type='text\/javascript'><\/script>\n<script src='\/puzlet\/php\/source.php?pageId=b00g4.3&file=extras.js' type='text\/javascript'><\/script>\n<link type='text\/css' rel='stylesheet' href='\/puzlet\/php\/source.php?pageId=b00g4.3&file=main.css'>\n<script src='\/puzlet\/php\/source.php?pageId=b00g4.3&file=main.js' type='text\/javascript'><\/script>\n<script src='\/puzlet\/php\/source.php?pageId=b00g4.3&file=result.js' type='text\/javascript'><\/script>\n<script src='\/puzlet\/php\/source.php?pageId=b00g4.3&file=main.js' type='text\/javascript'><\/script>\n",
  "usedModulePath" : [
    "..\/..\/..\/puzlet\/b007c.5",
    "..\/..\/..\/puzlet\/b000n.5",
    "..\/..\/..\/puzlet\/b006m.2",
    "..\/..\/..\/puzlet\/b000d.15",
    "..\/..\/..\/puzlet\/b000g.10"
  ],
  "codeNodes" : [
    {
      "id" : "resources",
      "lang" : "coffee",
      "filename" : "resources.coffee",
      "fileNoExt" : "resources",
      "isExec" : false,
      "isScript" : false,
      "endToken" : "#!end",
      "idxInFile" : 0,
      "idxInPage" : 0,
      "codeBlockLength" : 6,
      "codeBlockStart" : 0,
      "show" : "0",
      "out" : "1",
      "code" : "$pz.resources = -> [\n# Handled directly in http.js.\n]"
    },
    {
      "id" : "window",
      "lang" : "html",
      "filename" : "window.html",
      "fileNoExt" : "window",
      "isExec" : false,
      "isScript" : false,
      "endToken" : "<!--puzlet_end-->",
      "idxInFile" : 0,
      "idxInPage" : 1,
      "codeBlockLength" : 6,
      "codeBlockStart" : 0,
      "show" : "1",
      "out" : "1",
      "code" : "<div id=\"title\">\nWeb Lab\n<\/div>"
    },
    {
      "id" : "extras",
      "lang" : "coffee",
      "filename" : "extras.coffee",
      "fileNoExt" : "extras",
      "isExec" : false,
      "isScript" : false,
      "endToken" : "#!end",
      "idxInFile" : 0,
      "idxInPage" : 2,
      "codeBlockLength" : 4,
      "codeBlockStart" : 0,
      "show" : "1",
      "out" : "1",
      "win" : "1",
      "code" : "$blab.codeDecoration = false"
    },
    {
      "id" : "css",
      "lang" : "css",
      "filename" : "main.css",
      "fileNoExt" : "main",
      "isExec" : false,
      "isScript" : false,
      "endToken" : "\/*!end*\/",
      "idxInFile" : 0,
      "idxInPage" : 3,
      "codeBlockLength" : 7,
      "codeBlockStart" : 0,
      "show" : "1",
      "out" : "1",
      "win" : "1",
      "code" : "#intro {\n    width: 900px;\n    margin: 0 auto;\n}"
    },
    {
      "id" : "html",
      "lang" : "html",
      "filename" : "main.html",
      "fileNoExt" : "main",
      "isExec" : false,
      "isScript" : false,
      "endToken" : "<!--puzlet_end-->",
      "idxInFile" : 0,
      "idxInPage" : 4,
      "codeBlockLength" : 20,
      "codeBlockStart" : 0,
      "show" : "1",
      "out" : "1",
      "win" : "1",
      "code" : "<div id=\"intro\">\n==$\\LaTeX$\/MathJax and hyperlinks in Ace editor code comments==\n[\/ Puzlet] is about scientific computing in the browser.\nFor scientific computing code, \nit's useful to include math and hyperlinks in code comments, as [\/m\/b00c4 this example] shows.\n(Also, see [\/m\/b007h, this example] for similar Octave\/Python code.)\n\nThe CoffeeScript code below shows how to do this.  To see the generated JavaScript (below the CoffeeScript), \nclick the \"JS\" toggle button (top right).\n\nClick in the CoffeeScript editor to edit the math\/link source.  Click outside of the editor to see the rendered math\/links.\n\nThis math\/link rendering feature is now standard in Puzlet blabs.\nYou can also create a hyperlink for any identifier (e.g., variable, function call).\nThis is particularly useful for links to functions defined in other blabs.\n\n<\/div>"
    },
    {
      "id" : "coffee",
      "lang" : "coffee",
      "filename" : "main.coffee",
      "fileNoExt" : "main",
      "isExec" : false,
      "isScript" : false,
      "endToken" : "#!end",
      "idxInFile" : 0,
      "idxInPage" : 5,
      "codeBlockLength" : 97,
      "codeBlockStart" : 0,
      "show" : "1",
      "out" : "1",
      "win" : "1",
      "code" : "#!vanilla\n\n# MathJax in a comment: $\\Psi(t) = \\int_0^\\infty \\theta_n(t) dt$ \n\n# Link in a comment: <a href=\"\/\">puzlet.com<\/a>\n\n# This Ace editor\neditor = $blab.editors.coffeeEditor.editor \n\n# Render code comments.\n# Save to $blab.comments to handle Run button.\nrender = ->\n    nodes = $ \".ace_comment\"  # or container find\n    $blab.comments = (new CodeNodeComment($(node), linkCb) for node in nodes)\n    comment.render() for comment in $blab.comments\n    \n# Restore code comments to original source.\nrestore = -> comment.restore() for comment in $blab.comments\nrestore() if $blab.comments  # Restore if click Run button.\n\nclass CodeNodeComment\n\n    constructor: (@node, @linkCallback) ->\n    \n    render: ->\n        @originalText = @node.text()\n        @replaceDiv()\n        @mathJax()\n        @processLinks()\n    \n    replaceDiv: ->\n        pattern = String.fromCharCode(160)\n        re = new RegExp(pattern, \"g\")\n        comment = @originalText.replace(re, \" \")\n        @node.empty()\n        content = $ \"<div>\", css: display: \"inline-block\"\n        content.append comment\n        @node.append content\n    \n    mathJax: ->\n        return unless node = @node[0]\n        Hub = MathJax.Hub\n        Hub.Queue([\"PreProcess\", Hub, node])\n        Hub.Queue([\"Process\", Hub, node])\n    \n    processLinks: ->\n        links = @node.find \"a\"\n        return unless links.length\n        for link in links\n            $(link).mousedown (evt) => @linkCallback $(evt.target)\n    \n    restore: ->\n        return unless @originalText\n        @node.empty()\n        @node.text @originalText\n\n# State variable and callback for link selection\nlinkSelected = false\nlinkCb = (target) -> linkSelected = target\n\n# Comment link navigation\nmouseUp = ->\n    return unless linkSelected\n    href = linkSelected.attr \"href\"\n    target = linkSelected.attr \"target\"\n    if target is \"_self\"\n        $(document.body).animate {scrollTop: $(href).offset().top}, 1000\n    else\n        window.open href, target ? \"_blank\"\n    linkSelected = false\n    editor.blur()\n\n$blab.onFocus = -> restore()\n$blab.onBlur = -> render()\n\nunless $blab.initialized\n    \n    onFocus = editor.onFocus\n    editor.onFocus = ->\n        $blab.onFocus()\n        onFocus.call editor\n        \n    onBlur = editor.onBlur\n    editor.onBlur = ->\n        $blab.onBlur()\n        onBlur.call editor\n    $blab.initialized = true\n    \n    editor.on \"mouseup\", (aceEvent) -> mouseUp()\n\n# Render code comments when MathJax ready.\nrender() if MathJax?.Hub\n$(document).on \"mathjaxPreConfig\", ->\n    window.MathJax.Hub.Register.StartupHook \"MathMenu Ready\", -> render()"
    },
    {
      "id" : "result",
      "lang" : "coffee",
      "filename" : "result.coffee",
      "fileNoExt" : "result",
      "isExec" : false,
      "isScript" : false,
      "endToken" : "#!end",
      "idxInFile" : 0,
      "idxInPage" : 6,
      "codeBlockLength" : 4,
      "codeBlockStart" : 0,
      "show" : "1",
      "out" : "1",
      "code" : ""
    },
    {
      "id" : "js",
      "lang" : "javascript",
      "filename" : "main.js",
      "fileNoExt" : "main",
      "isExec" : false,
      "isScript" : false,
      "endToken" : "\/\/!end",
      "idxInFile" : 0,
      "idxInPage" : 7,
      "codeBlockLength" : 9,
      "codeBlockStart" : 0,
      "show" : "1",
      "out" : "1",
      "code" : "\/\/ Generated by CoffeeScript 1.4.0\n(function() {\n\n  2 + 2;\n\n}).call(this);"
    }
  ]
}